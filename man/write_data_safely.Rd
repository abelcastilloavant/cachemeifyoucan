% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/db.R
\name{write_data_safely}
\alias{write_data_safely}
\title{Write data.frames to DB addressing pitfalls}
\usage{
write_data_safely(dbconn, tblname, df, key, safe_columns, blacklist)
}
\arguments{
\item{dbconn}{PostgreSQLConnection. The database connection.}

\item{tblname}{character. The table name to write the data into.}

\item{df}{data.frame. The data to write.}

\item{key}{character. The identifier column name.}

\item{safe_columns}{logical or function.  If safe_columns = \code{TRUE}
and a caching call would add additional columns for an already existing
cache with already existing columns, the function will instead crash.
If safe_columns is a function, that function will be called.  The function
must return /code{TRUE} for this to work.  Also the function will be called
with no arguments.  This is mainly so you can write your own error message.
If safe_columns is /code{FALSE}, the additional columns will be added.
Defaults \code{FALSE}.}

\item{blacklist}{list. Any elements in this list will be blocked from caching.
This is useful for implementing a conditonal cache or adding more safety around
your caching layer.  Defaults to \code{NULL} or no blacklist.}
}
\description{
Write data.frames to DB addressing pitfalls
}

