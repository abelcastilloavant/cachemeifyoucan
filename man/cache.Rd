% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/cache.R
\name{cache}
\alias{cache}
\title{Apply a database caching layer to an arbitrary R function.}
\usage{
cache(uncached_function, key, salt, con, prefix, env)
}
\arguments{
\item{uncached_function}{function. The function to cache.}

\item{key}{character. A character vector of primary keys. If \code{key} is unnamed,
the user guarantees that \code{uncached_function} has these as formal arguments
and that it returns a data.frame containing columns with at least those
names. For example, if we are caching a function that looks like
\code{function(author) { ... }}, we expect its output to be data.frames
containing an \code{"author"} column with one record for each author.
In this situation, \code{key = "author"}. Otherwise if \code{key} is
a named length 1 vector, the name shall match the uncached_function key
argument, the value shall be matched to at least one of the columns the
returned data.frame contains.}

\item{salt}{character. The names of the formal arguments of \code{uncached_function}
for which a unique value at calltime should use a different database
table. In other words, if \code{uncached_function} has arguments
\code{id, x, y}, but different kinds of data.frames (i.e., ones with
different types and/or column names) will be returned depending
on the value of \code{x} or \code{y}, then we can set
\code{salt = c("x", "y")} to use a different database table for
each combination of values of \code{x} and \code{y}. For example,
if \code{x} and \code{y} are only allowed to be \code{TRUE} or
\code{FALSE}, with potentially four different kinds of data.frame
outputs, then up to four tables would be created.}

\item{con}{SQLConnection. Database connection object.}

\item{prefix}{character. Database table prefix. A different prefix should
be used for each cached function so that there are no table collisions.
Optional, but highly recommended.}

\item{env}{character. The environment of the database connection if con
is a yaml cofiguration file.}
}
\value{
A function with a caching layer that does not call
  \code{uncached_function} with already computed records, but retrieves
  those results from an underlying database table.
}
\description{
Requesting data from an API or performing queries can sometimes yield
dataframe outputs that are easily cached according to some primary key.
This function makes it possible to cache the output along the primary
key, while only using the uncached function on those records that
have not been computed before.
}

