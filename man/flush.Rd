% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/flush.R
\name{flush}
\alias{flush}
\title{Cache the database caching layer for an arbitrary R function to remove
the caching layer, paired with cache(...) function.}
\usage{
flush(uncached_function, key, salt, con, prefix, env)
}
\arguments{
\item{uncached_function}{function. The function to cache.}

\item{key}{character. A character vector of primary keys. The user
guarantees that \code{uncached_function} has these as formal arguments
and that it returns a data.frame containing columns with at least those
names. For example, if we are caching a function that looks like
\code{function(author) { ... }}, we expect its output to be data.frames
containing an \code{"author"} column with one record for each author.
In this situation, \code{key = "author"}.}

\item{salt}{character. The names of the formal arguments of \code{uncached_function}
for which a unique value at calltime should use a different database
table. In other words, if \code{uncached_function} has arguments
\code{id, x, y}, but different kinds of data.frames (i.e., ones with
different types and/or column names) will be returned depending
on the value of \code{x} or \code{y}, then we can set
\code{salt = c("x", "y")} to use a different database table for
each combination of values of \code{x} and \code{y}. For example,
if \code{x} and \code{y} are only allowed to be \code{TRUE} or
\code{FALSE}, with potentially four different kinds of data.frame
outputs, then up to four tables would be created.}

\item{con}{SQLConnection. Database connection object.}

\item{prefix}{character. Database table prefix. A different prefix should
be used for each cached function so that there are no table collisions.
Optional, but highly recommended.}

\item{env}{character. The environment of the database connection if con
is a yaml cofiguration file.}
}
\value{
A function that would remove underlying database table.
}
\description{
Cache the database caching layer for an arbitrary R function to remove
the caching layer, paired with cache(...) function.
}

